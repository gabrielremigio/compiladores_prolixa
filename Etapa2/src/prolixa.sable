Package prolixa;

Helpers
    all = [0 .. 0xFFFF];    /* Qualquer caractere da tabela ASCII */
    lowercase = ['a' ..'z'];
    uppercase = ['A' ..'Z'];
    digito = ['0' .. '9'];
    digito_hexa = [digito + [['a' .. 'f'] + ['A' .. 'F']]];

    numero_real = (digito)+ '.' (digito)+;

    espaco = ' ';
    aspa_simples = 39;
    aspa_dupla = 34;
    tab = 9;
    rc = 13;
    nl = 10;
    eol = rc nl | rc | nl;
    blank = (eol | tab | espaco)+;

    comment = '{' all* '}';

    letra = lowercase | uppercase | '_' ;

    id = uppercase (letra)*;

Tokens

    this = 'This';
    is = 'is';
    program = 'program';
    it = 'It';
    presents = 'presents';
    let = 'Let';
    us = 'us';
    begin = 'begin';
    would = 'would';
    be = 'be';
    all = 'all';
    unalterable = 'unalterable';
    alterable = 'alterable';
    symbol = 'symbol';
    number = 'number';
    answer = 'answer';
    yes = 'yes';
    no = 'no';
    just = 'just';
    in  = 'in';
    case = 'case';
    that = 'that';
    otherwise = 'otherwise';
    as = 'as';
    long = 'long';
    do = 'do';
    considering = 'considering';
    that1 = 'that';
    that2 = 'That';
    from = 'from';
    by = 'by';
    show = 'show';
    capture = 'capture';
    abandon = 'abandon';
    go = 'go';
    to = 'to';
    next = 'next';
    iteration = 'iteration';
    vetor = 'vector';
    of = 'of';

    x = 'x';

    identificador = id ;

    constante = 'unalterable' id;
    variavel = 'alterable' id;

    semicolon = ';';
    colon = ',';
    dot = '.';
    d_dot = ':';
    aspa_simples = aspa_simples;
    aspa_dupla = aspa_dupla;

    p_esq = '(';
    p_dir = ')';
    k_esq = '{';
    k_dir = '}';
    c_esq = '[';
    c_dir = ']';

    igualdade = '=';
    atribui = ':=';
    
    mais = '+';
    menos = '-';
    estrela = '*';
    div = '/';
    div_int = '//';

    eq = '==';
    neq = '!=';
    lt = '<';
    lteq = '<=';
    gt = '>';
    gteq = '>=';

    exclamacao = '!';
    and = 'and';
    or = 'or';
    xor = 'xor';

    numero = ('-')? (digito)+ | ('-')? (numero_real)+;
    string = aspa_dupla all* aspa_dupla;

    blank = blank;
    comment = comment;

Ignored Tokens
    blank, comment;
