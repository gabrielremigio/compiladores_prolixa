/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.node;

import prolixa.analysis.*;

@SuppressWarnings("nls")
public final class AAPrograma extends PAPrograma
{
    private TIdentificador _nome_;
    private PADeclaracoes _dclrs_;
    private PAComandos _cmds_;

    public AAPrograma()
    {
        // Constructor
    }

    public AAPrograma(
        @SuppressWarnings("hiding") TIdentificador _nome_,
        @SuppressWarnings("hiding") PADeclaracoes _dclrs_,
        @SuppressWarnings("hiding") PAComandos _cmds_)
    {
        // Constructor
        setNome(_nome_);

        setDclrs(_dclrs_);

        setCmds(_cmds_);

    }

    @Override
    public Object clone()
    {
        return new AAPrograma(
            cloneNode(this._nome_),
            cloneNode(this._dclrs_),
            cloneNode(this._cmds_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAPrograma(this);
    }

    public TIdentificador getNome()
    {
        return this._nome_;
    }

    public void setNome(TIdentificador node)
    {
        if(this._nome_ != null)
        {
            this._nome_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nome_ = node;
    }

    public PADeclaracoes getDclrs()
    {
        return this._dclrs_;
    }

    public void setDclrs(PADeclaracoes node)
    {
        if(this._dclrs_ != null)
        {
            this._dclrs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dclrs_ = node;
    }

    public PAComandos getCmds()
    {
        return this._cmds_;
    }

    public void setCmds(PAComandos node)
    {
        if(this._cmds_ != null)
        {
            this._cmds_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cmds_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._nome_)
            + toString(this._dclrs_)
            + toString(this._cmds_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._nome_ == child)
        {
            this._nome_ = null;
            return;
        }

        if(this._dclrs_ == child)
        {
            this._dclrs_ = null;
            return;
        }

        if(this._cmds_ == child)
        {
            this._cmds_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._nome_ == oldChild)
        {
            setNome((TIdentificador) newChild);
            return;
        }

        if(this._dclrs_ == oldChild)
        {
            setDclrs((PADeclaracoes) newChild);
            return;
        }

        if(this._cmds_ == oldChild)
        {
            setCmds((PAComandos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
