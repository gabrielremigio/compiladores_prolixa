/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.analysis;

import java.util.*;
import prolixa.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAGrammarAStart(AAGrammarAStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProgramaAStart(AAProgramaAStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAGrammar(AAGrammar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPackage(AAPackage node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPkgName(AAPkgName node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPkgNameTail(AAPkgNameTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAHelpers(AAHelpers node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAHelperDef(AAHelperDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAStates(AAStates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdList(AAIdList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdListTail(AAIdListTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATokens(AATokens node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATokenDef(AATokenDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAStateList(AAStateList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAStateListTail(AAStateListTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATransition(AATransition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIgnTokens(AAIgnTokens node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAALookAhead(AALookAhead node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExprReg(AAExprReg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExprRegTail(AAExprRegTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAConcat(AAConcat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExprUn(AAExprUn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAACharABasic(AACharABasic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAConjuntoABasic(AAConjuntoABasic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAStringABasic(AAStringABasic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdentificadorABasic(AAIdentificadorABasic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExprRegABasic(AAExprRegABasic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAACharAChar(AACharAChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecAChar(AADecAChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAHexAChar(AAHexAChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAOperacaoAConjunto(AAOperacaoAConjunto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIntervaloAConjunto(AAIntervaloAConjunto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAEstrelaAOpUn(AAEstrelaAOpUn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAQMarkAOpUn(AAQMarkAOpUn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMaisAOpUn(AAMaisAOpUn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMaisAOpBin(AAMaisAOpBin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMenosAOpBin(AAMenosAOpBin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProductions(AAProductions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProd(AAProd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAlts(AAAlts node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAltsTail(AAAltsTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAParsedAAlt(AAParsedAAlt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIgnoredAAlt(AAIgnoredAAlt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAltName(AAAltName node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAElem(AAElem node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAElemName(AAElemName node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATokenASpecifier(AATokenASpecifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProductionASpecifier(AAProductionASpecifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPrograma(AAPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADeclaracoes(AADeclaracoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAComandos(AAComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAlterableDeclADeclaracao(AAAlterableDeclADeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAUnalterableDeclADeclaracao(AAUnalterableDeclADeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVectorDeclADeclaracao(AAVectorDeclADeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANumberATipo(AANumberATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAnswerATipo(AAAnswerATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASymbolATipo(AASymbolATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAUnalt(AAUnalt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABloco(AABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAtribuicaoMatchedAMatchedStmt(AAAtribuicaoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVinculacaoMatchedAMatchedStmt(AAVinculacaoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAACapturaMatchedAMatchedStmt(AACapturaMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAShowMatchedAMatchedStmt(AAShowMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAEnquantoMatchedAMatchedStmt(AAEnquantoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIteracaoMatchedAMatchedStmt(AAIteracaoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAbadonMatchedAMatchedStmt(AAAbadonMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProxIteracaoMatchedAMatchedStmt(AAProxIteracaoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoMatchedAMatchedStmt(AABlocoMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIfComElseMatchedAMatchedStmt(AAIfComElseMatchedAMatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMatchedStatementAMatchedStmt2(AAMatchedStatementAMatchedStmt2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAtribuicaoAComando(AAAtribuicaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVinculacaoAComando(AAVinculacaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAACapturaAComando(AACapturaAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAShowAComando(AAShowAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAEnquantoAComando(AAEnquantoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIteracaoAComando(AAIteracaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAbadonAComando(AAAbadonAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProxIteracaoAComando(AAProxIteracaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoAComando(AABlocoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIfComElseAComando(AAIfComElseAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIfSemElseAComando(AAIfSemElseAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAOrAExp(AAOrAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAXorAExp(AAXorAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAndAExp(AAAndAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAEqAExp(AAEqAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANeqAExp(AANeqAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAALteqAExp(AALteqAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAGteqAExp(AAGteqAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAALtAExp(AALtAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAGtAExp(AAGtAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAddAExp(AAAddAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASubAExp(AASubAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMulAExp(AAMulAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADivAExp(AADivAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADivIntAExp(AADivIntAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANegAExp(AANegAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANotAExp(AANotAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAParensAExp(AAParensAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASymbolValuesAExp(AASymbolValuesAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANumeroAExp(AANumeroAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAnswerValuesAExp(AAAnswerValuesAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAStringAExp(AAStringAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdentificador1AExp(AAIdentificador1AExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdentificador2AExp(AAIdentificador2AExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVectorSizesAExp(AAVectorSizesAExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPkgId(TPkgId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPackage(TPackage node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStates(TStates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHelpers(THelpers node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokens(TTokens node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgnored(TIgnored node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProductions(TProductions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokenSpecifier(TTokenSpecifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProductionSpceifier(TProductionSpceifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIs(TIs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProgram(TProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIt(TIt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPresents(TPresents node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLet(TLet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUs(TUs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBegin(TBegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWould(TWould node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBe(TBe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAll(TAll node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUnalterable(TUnalterable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlterable(TAlterable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSymbol(TSymbol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnswer(TAnswer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnswerValues(TAnswerValues node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJust(TJust node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCase(TCase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOtherwise(TOtherwise node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAs1(TAs1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLong(TLong node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConsidering(TConsidering node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThat1(TThat1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThat2(TThat2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFrom(TFrom node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBy(TBy node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShow(TShow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCapture(TCapture node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbandon(TAbandon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGo(TGo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTo(TTo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNext(TNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIteration(TIteration node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVector(TVector node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOf(TOf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTX(TX node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVariavel(TVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDDot(TDDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspasSimples(TAspasSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspasSimples2(TAspasSimples2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPEsq(TPEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPDir(TPDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCEsq(TCEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCDir(TCDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveEsq(TChaveEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveDir(TChaveDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSetaDir(TSetaDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroHexa(TNumeroHexa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTQMark(TQMark node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVincula(TVincula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribui(TAtribui node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEstrela(TEstrela node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivInt(TDivInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExclamacao(TExclamacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSymbolValues(TSymbolValues node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
