/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.analysis;

import prolixa.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAAGrammarAStart(AAGrammarAStart node);
    void caseAAProgramaAStart(AAProgramaAStart node);
    void caseAAGrammar(AAGrammar node);
    void caseAAPackage(AAPackage node);
    void caseAAPkgName(AAPkgName node);
    void caseAAPkgNameTail(AAPkgNameTail node);
    void caseAAHelpers(AAHelpers node);
    void caseAAHelperDef(AAHelperDef node);
    void caseAAStates(AAStates node);
    void caseAAIdList(AAIdList node);
    void caseAAIdListTail(AAIdListTail node);
    void caseAATokens(AATokens node);
    void caseAATokenDef(AATokenDef node);
    void caseAAStateList(AAStateList node);
    void caseAAStateListTail(AAStateListTail node);
    void caseAATransition(AATransition node);
    void caseAAIgnTokens(AAIgnTokens node);
    void caseAALookAhead(AALookAhead node);
    void caseAAExprReg(AAExprReg node);
    void caseAAExprRegTail(AAExprRegTail node);
    void caseAAConcat(AAConcat node);
    void caseAAExprUn(AAExprUn node);
    void caseAACharABasic(AACharABasic node);
    void caseAAConjuntoABasic(AAConjuntoABasic node);
    void caseAAStringABasic(AAStringABasic node);
    void caseAAIdentificadorABasic(AAIdentificadorABasic node);
    void caseAAExprRegABasic(AAExprRegABasic node);
    void caseAACharAChar(AACharAChar node);
    void caseAADecAChar(AADecAChar node);
    void caseAAHexAChar(AAHexAChar node);
    void caseAAOperacaoAConjunto(AAOperacaoAConjunto node);
    void caseAAIntervaloAConjunto(AAIntervaloAConjunto node);
    void caseAAEstrelaAOpUn(AAEstrelaAOpUn node);
    void caseAAQMarkAOpUn(AAQMarkAOpUn node);
    void caseAAMaisAOpUn(AAMaisAOpUn node);
    void caseAAMaisAOpBin(AAMaisAOpBin node);
    void caseAAMenosAOpBin(AAMenosAOpBin node);
    void caseAAProductions(AAProductions node);
    void caseAAProd(AAProd node);
    void caseAAAlts(AAAlts node);
    void caseAAAltsTail(AAAltsTail node);
    void caseAAParsedAAlt(AAParsedAAlt node);
    void caseAAIgnoredAAlt(AAIgnoredAAlt node);
    void caseAAAltName(AAAltName node);
    void caseAAElem(AAElem node);
    void caseAAElemName(AAElemName node);
    void caseAATokenASpecifier(AATokenASpecifier node);
    void caseAAProductionASpecifier(AAProductionASpecifier node);
    void caseAAPrograma(AAPrograma node);
    void caseAADeclaracoes(AADeclaracoes node);
    void caseAAComandos(AAComandos node);
    void caseAAAlterableDeclADeclaracao(AAAlterableDeclADeclaracao node);
    void caseAAUnalterableDeclADeclaracao(AAUnalterableDeclADeclaracao node);
    void caseAAVectorDeclADeclaracao(AAVectorDeclADeclaracao node);
    void caseAANumberATipo(AANumberATipo node);
    void caseAAAnswerATipo(AAAnswerATipo node);
    void caseAASymbolATipo(AASymbolATipo node);
    void caseAAUnalt(AAUnalt node);
    void caseAABloco(AABloco node);
    void caseAAAtribuicaoMatchedAMatchedStmt(AAAtribuicaoMatchedAMatchedStmt node);
    void caseAAVinculacaoMatchedAMatchedStmt(AAVinculacaoMatchedAMatchedStmt node);
    void caseAACapturaMatchedAMatchedStmt(AACapturaMatchedAMatchedStmt node);
    void caseAAShowMatchedAMatchedStmt(AAShowMatchedAMatchedStmt node);
    void caseAAEnquantoMatchedAMatchedStmt(AAEnquantoMatchedAMatchedStmt node);
    void caseAAIteracaoMatchedAMatchedStmt(AAIteracaoMatchedAMatchedStmt node);
    void caseAAAbadonMatchedAMatchedStmt(AAAbadonMatchedAMatchedStmt node);
    void caseAAProxIteracaoMatchedAMatchedStmt(AAProxIteracaoMatchedAMatchedStmt node);
    void caseAABlocoMatchedAMatchedStmt(AABlocoMatchedAMatchedStmt node);
    void caseAAIfComElseMatchedAMatchedStmt(AAIfComElseMatchedAMatchedStmt node);
    void caseAAMatchedStatementAMatchedStmt2(AAMatchedStatementAMatchedStmt2 node);
    void caseAAAtribuicaoAComando(AAAtribuicaoAComando node);
    void caseAAVinculacaoAComando(AAVinculacaoAComando node);
    void caseAACapturaAComando(AACapturaAComando node);
    void caseAAShowAComando(AAShowAComando node);
    void caseAAEnquantoAComando(AAEnquantoAComando node);
    void caseAAIteracaoAComando(AAIteracaoAComando node);
    void caseAAAbadonAComando(AAAbadonAComando node);
    void caseAAProxIteracaoAComando(AAProxIteracaoAComando node);
    void caseAABlocoAComando(AABlocoAComando node);
    void caseAAIfComElseAComando(AAIfComElseAComando node);
    void caseAAIfSemElseAComando(AAIfSemElseAComando node);
    void caseAAOrAExp(AAOrAExp node);
    void caseAAXorAExp(AAXorAExp node);
    void caseAAAndAExp(AAAndAExp node);
    void caseAAEqAExp(AAEqAExp node);
    void caseAANeqAExp(AANeqAExp node);
    void caseAALteqAExp(AALteqAExp node);
    void caseAAGteqAExp(AAGteqAExp node);
    void caseAALtAExp(AALtAExp node);
    void caseAAGtAExp(AAGtAExp node);
    void caseAAAddAExp(AAAddAExp node);
    void caseAASubAExp(AASubAExp node);
    void caseAAMulAExp(AAMulAExp node);
    void caseAADivAExp(AADivAExp node);
    void caseAADivIntAExp(AADivIntAExp node);
    void caseAANegAExp(AANegAExp node);
    void caseAANotAExp(AANotAExp node);
    void caseAAParensAExp(AAParensAExp node);
    void caseAASymbolValuesAExp(AASymbolValuesAExp node);
    void caseAANumeroAExp(AANumeroAExp node);
    void caseAAAnswerValuesAExp(AAAnswerValuesAExp node);
    void caseAAStringAExp(AAStringAExp node);
    void caseAAIdentificador1AExp(AAIdentificador1AExp node);
    void caseAAIdentificador2AExp(AAIdentificador2AExp node);
    void caseAAVectorSizesAExp(AAVectorSizesAExp node);

    void caseTPkgId(TPkgId node);
    void caseTPackage(TPackage node);
    void caseTStates(TStates node);
    void caseTHelpers(THelpers node);
    void caseTTokens(TTokens node);
    void caseTIgnored(TIgnored node);
    void caseTProductions(TProductions node);
    void caseTTokenSpecifier(TTokenSpecifier node);
    void caseTProductionSpceifier(TProductionSpceifier node);
    void caseTThis(TThis node);
    void caseTIs(TIs node);
    void caseTProgram(TProgram node);
    void caseTIt(TIt node);
    void caseTPresents(TPresents node);
    void caseTLet(TLet node);
    void caseTUs(TUs node);
    void caseTBegin(TBegin node);
    void caseTWould(TWould node);
    void caseTBe(TBe node);
    void caseTAll(TAll node);
    void caseTUnalterable(TUnalterable node);
    void caseTAlterable(TAlterable node);
    void caseTSymbol(TSymbol node);
    void caseTNumber(TNumber node);
    void caseTAnswer(TAnswer node);
    void caseTAnswerValues(TAnswerValues node);
    void caseTJust(TJust node);
    void caseTIn(TIn node);
    void caseTCase(TCase node);
    void caseTOtherwise(TOtherwise node);
    void caseTAs1(TAs1 node);
    void caseTLong(TLong node);
    void caseTDo(TDo node);
    void caseTConsidering(TConsidering node);
    void caseTThat1(TThat1 node);
    void caseTThat2(TThat2 node);
    void caseTFrom(TFrom node);
    void caseTBy(TBy node);
    void caseTShow(TShow node);
    void caseTCapture(TCapture node);
    void caseTAbandon(TAbandon node);
    void caseTGo(TGo node);
    void caseTTo(TTo node);
    void caseTNext(TNext node);
    void caseTIteration(TIteration node);
    void caseTVector(TVector node);
    void caseTOf(TOf node);
    void caseTX(TX node);
    void caseTIdentificador(TIdentificador node);
    void caseTConstante(TConstante node);
    void caseTVariavel(TVariavel node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTDot(TDot node);
    void caseTDDot(TDDot node);
    void caseTAspasSimples(TAspasSimples node);
    void caseTAspasSimples2(TAspasSimples2 node);
    void caseTPEsq(TPEsq node);
    void caseTPDir(TPDir node);
    void caseTCEsq(TCEsq node);
    void caseTCDir(TCDir node);
    void caseTChaveEsq(TChaveEsq node);
    void caseTChaveDir(TChaveDir node);
    void caseTSetaDir(TSetaDir node);
    void caseTBarra(TBarra node);
    void caseTNumeroHexa(TNumeroHexa node);
    void caseTQMark(TQMark node);
    void caseTVincula(TVincula node);
    void caseTAtribui(TAtribui node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTEstrela(TEstrela node);
    void caseTDiv(TDiv node);
    void caseTDivInt(TDivInt node);
    void caseTEq(TEq node);
    void caseTNeq(TNeq node);
    void caseTLt(TLt node);
    void caseTLteq(TLteq node);
    void caseTGt(TGt node);
    void caseTGteq(TGteq node);
    void caseTExclamacao(TExclamacao node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTXor(TXor node);
    void caseTNumero(TNumero node);
    void caseTString(TString node);
    void caseTSymbolValues(TSymbolValues node);
    void caseTChar(TChar node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
